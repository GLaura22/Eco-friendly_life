// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eco_friendly_life_winform.Database_Backend.Connection;

#nullable disable

namespace eco_friendly_life_winform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240303102316_mssql.local_migration_235")]
    partial class mssqllocal_migration_235
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.DishType", b =>
                {
                    b.Property<int>("DishTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishTypeID"));

                    b.Property<string>("DishTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishTypeID");

                    b.ToTable("DishTypes");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.IngRecRel", b =>
                {
                    b.Property<int>("RelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelID"));

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("RelID");

                    b.ToTable("IngRecRels");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"));

                    b.Property<double>("CarbonFootprint")
                        .HasColumnType("float");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.Person", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeID"));

                    b.Property<double>("CarbonFootprint")
                        .HasColumnType("float");

                    b.Property<bool>("ContainsMeat")
                        .HasColumnType("bit");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DishTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("eco_friendly_life_winform.Database_Backend.Tables.Tipp", b =>
                {
                    b.Property<int>("TippID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TippID"));

                    b.Property<string>("TippName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TippID");

                    b.ToTable("Tipps");
                });
#pragma warning restore 612, 618
        }
    }
}
